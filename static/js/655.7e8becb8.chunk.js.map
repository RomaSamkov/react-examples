{"version":3,"file":"static/js/655.7e8becb8.chunk.js","mappings":"kKACA,MAAwB,4BAAxB,EAA4D,4BAA5D,EAAgG,4BAAhG,EAAkI,0BCDrHA,EAAe,CAC1BC,KAAM,GACNC,MAAO,GACPC,SAAU,I,kBC8DZ,EA5DqB,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAKrBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,kBAAMM,OAAO,GAAGL,SAAUI,EAAa,WACrC,iBAAKE,UAAWC,EAAa,WAC3B,kBAAOD,UAAWC,EAAcC,QAAQ,GAAE,SAAC,gBAG3C,kBACEC,MAAOZ,EACPA,KAAK,OACLa,SAAUP,EACVG,UAAWC,EACXI,KAAK,OACLC,YAAY,aACZC,UAAQ,QAGZ,iBAAKP,UAAWC,EAAa,WAC3B,kBAAOD,UAAWC,EAAcC,QAAQ,GAAE,SAAC,YAG3C,kBACEC,MAAOX,EACPD,KAAK,QACLa,SAAUP,EACVG,UAAWC,EACXI,KAAK,QACLC,YAAY,oBAGhB,iBAAKN,UAAWC,EAAa,WAC3B,kBAAOD,UAAWC,EAAcC,QAAQ,GAAE,SAAC,eAG3C,kBACEC,MAAOV,EACPF,KAAK,WACLa,SAAUP,EACVG,UAAWC,EACXI,KAAK,WACLC,YAAY,uBAIhB,gBAAKN,UAAWC,EAAa,UAC3B,mBAAQD,UAAWC,EAAYI,KAAK,SAAQ,SAAC,iBAMrD,E,kDCnCA,EArBqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,IAAYC,EAAAA,GAAnCC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAOhB,OANgBH,EAAAA,EAAAA,IAAYI,EAAAA,IAOnB,SAAC,KAAQ,CAACC,GAAG,YAGpB,iBAAKf,UAAU,YAAW,WACxB,wBAAI,mBACJ,SAAC,EAAY,CAACN,SAVC,SAACsB,GAClBR,GAASS,EAAAA,EAAAA,GAAOD,GAClB,IASKJ,IAAU,cAAGM,MAAO,CAAEC,MAAO,OAAQ,SAAEN,MAG9C,C,8EC1BO,IAAMF,EAAe,SAAH,GAAU,SAAJS,KAAgBC,OAAS,CAAC,CAAE,EAC9CP,EAAS,SAAH,GAAU,SAAJM,KAAgBE,OAAQ,C,kECuBjD,IAtBgB,SAAH,GAAoC,IAA9BhC,EAAY,EAAZA,aAAcI,EAAQ,EAARA,SAC/B,GAA0B6B,EAAAA,EAAAA,WAAS,UAAKjC,IAAe,eAAhDM,EAAK,KAAE4B,EAAQ,KAkBtB,MAAO,CAAE5B,MAAAA,EAAO4B,SAAAA,EAAU3B,aAhBL,SAAH,GAAoB,IAAd4B,EAAM,EAANA,OACdlC,EAA+BkC,EAA/BlC,KAAMY,EAAyBsB,EAAzBtB,MAAOE,EAAkBoB,EAAlBpB,KAAMqB,EAAYD,EAAZC,QAErBC,EAAoB,aAATtB,EAAsBqB,EAAUvB,EACjDqB,GAAS,SAACI,GAAS,yBACdA,GAAS,cACXrC,EAAOoC,GAAQ,GAEpB,EAQwC7B,aANnB,SAAC+B,GACpBA,EAAEC,iBACFpC,GAAS,UAAKE,IACd4B,GAAS,UAAKlC,GAChB,EAGF,C","sources":["webpack://react-examples/./src/modules/RegisterForm/RegisterForm.module.scss?1da4","modules/RegisterForm/initialState.js","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","redux/auth/auth-selectors.js","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"group\":\"RegisterForm_group__7Qg3T\",\"label\":\"RegisterForm_label__dT6TF\",\"input\":\"RegisterForm_input__8NOWR\",\"btn\":\"RegisterForm_btn__1xC4t\"};","export const initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\n","import styles from \"./RegisterForm.module.scss\";\n\nimport { initialState } from \"./initialState\";\nimport useForm from \"shared/hooks/useForm\";\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          User Name:\n        </label>\n        <input\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"Enter name\"\n          required\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          Email:\n        </label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          Password:\n        </label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          placeholder=\"Enter password\"\n        />\n      </div>\n\n      <div className={styles.group}>\n        <button className={styles.btn} type=\"submit\">\n          Register\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"modules/RegisterForm\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { signup } from \"redux/auth/auth-operations\";\nimport { getAuthError, isAuth } from \"redux/auth/auth-selectors\";\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, statusText } = useSelector(getAuthError);\n  const isLogin = useSelector(isAuth);\n\n  const onRegister = (data) => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/books\" />;\n  }\n  return (\n    <div className=\"container\">\n      <h2>Register Page</h2>\n      <RegisterForm onSubmit={onRegister} />\n      {status && <p style={{ color: \"red\" }}>{statusText}</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","export const getAuthError = ({ auth }) => auth.error || {};\nexport const isAuth = ({ auth }) => auth.isLogin;\n","import { useState } from \"react\";\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n\n    const newValue = type === \"checkbox\" ? checked : value;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","className","styles","htmlFor","value","onChange","type","placeholder","required","dispatch","useDispatch","useSelector","getAuthError","status","statusText","isAuth","to","data","signup","style","color","auth","error","isLogin","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}