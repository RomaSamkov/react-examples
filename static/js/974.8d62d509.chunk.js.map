{"version":3,"file":"static/js/974.8d62d509.chunk.js","mappings":"8MAiEA,UA7DgC,WAC9B,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA0BE,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OACP,eAJKC,EAAK,KAAEC,EAAQ,MAMtBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,yCAAG,yFAMX,OANW,SAEfF,GAAS,SAACG,GAAS,yBACdA,GAAS,IACZN,SAAS,EACTC,MAAO,MAAI,IACT,UAEiBM,EAAAA,EAAAA,IAAgBX,GAAI,KAAD,EAAlCY,EAAM,OACZL,GAAS,SAACG,GACR,OAAO,kBACFA,GAAS,IACZP,MAAOS,GAEX,IAAG,gDAEHL,GAAS,SAACG,GAAS,yBACdA,GAAS,IACZL,MAAK,UACH,QAOD,OAPC,UAEJE,GAAS,SAACG,GACR,OAAO,kBACFA,GAAS,IACZN,SAAS,GAEb,IAAG,4EAEN,kBA5Be,mCA8BhBK,GACF,GAAG,CAACF,EAAUP,IAEd,IAEMa,EAFYP,EAAVH,MAEeW,KAAI,gBAAGd,EAAE,EAAFA,GAAIe,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACjD,2BACE,yBAAG,QACKF,EAAK,cAAYC,KAExBC,IAJMjB,EAKJ,IAGP,OACE,gBAAKkB,UAAU,YAAW,UACxB,wBAAKL,KAGX,C,wJC7DMM,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,6CACTC,OAAQ,CACNC,OAAQ,MAICC,EAAQ,yCAAG,yGAAgB,OAATC,EAAK,+BAAG,EAAC,SACfN,EAASO,IAAI,IAAK,CACvCJ,OAAQ,CACNG,MAAAA,KAED,KAAD,EAJU,OAIV,SAJME,EAAI,EAAJA,KAAI,kBAMLA,GAAI,2CACZ,kBARoB,mCAURC,EAAa,yCAAG,WAAO5B,GAAE,8FACbmB,EAASO,IAAI,IAAD,OAAK1B,IAAM,KAAD,EAAjC,OAAiC,SAArC2B,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACZ,gBAJyB,sCAMbE,EAAW,yCAAG,WAAOC,GAAC,4FAAW,OAATL,EAAK,+BAAG,EAAC,SACrBN,EAAS,IAAK,CACnCG,OAAQ,CACNQ,EAAAA,EACAL,MAAAA,KAED,KAAD,EALU,OAKV,SALME,EAAI,EAAJA,KAAI,kBAMLA,GAAI,2CACZ,gBARuB,sCAUXhB,EAAe,yCAAG,WAAOX,GAAE,8FACfmB,EAASO,IAAI,IAAD,OAAK1B,EAAE,cAAa,KAAD,EAA1C,OAA0C,SAA9C2B,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACZ,gBAJ2B,qC","sources":["pages/SinglePostsCommentsPage/SinglePostsCommentsPage.jsx","shared/services/posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getPostComments } from \"shared/services/posts\";\n\nconst SinglePostsCommentsPage = () => {\n  const { id } = useParams();\n\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setState((prevState) => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getPostComments(id);\n        setState((prevState) => {\n          return {\n            ...prevState,\n            items: result,\n          };\n        });\n      } catch (error) {\n        setState((prevState) => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState((prevState) => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchPosts();\n  }, [setState, id]);\n\n  const { items } = state;\n\n  const elements = items.map(({ id, name, email, body }) => (\n    <li key={id}>\n      <p>\n        Name:{name} *** Email:{email}\n      </p>\n      {body}\n    </li>\n  ));\n\n  return (\n    <div className=\"container\">\n      <ul>{elements}</ul>\n    </div>\n  );\n};\n\nexport default SinglePostsCommentsPage;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com/posts\",\n  params: {\n    _limit: 12,\n  },\n});\n\nexport const getPosts = async (_page = 1) => {\n  const { data } = await instance.get(\"/\", {\n    params: {\n      _page,\n    },\n  });\n\n  return data;\n};\n\nexport const getSinglePost = async (id) => {\n  const { data } = await instance.get(`/${id}`);\n\n  return data;\n};\n\nexport const searchPosts = async (q, _page = 1) => {\n  const { data } = await instance(\"/\", {\n    params: {\n      q,\n      _page,\n    },\n  });\n  return data;\n};\n\nexport const getPostComments = async (id) => {\n  const { data } = await instance.get(`/${id}/comments`);\n\n  return data;\n};\n"],"names":["id","useParams","useState","items","loading","error","state","setState","useEffect","fetchPosts","prevState","getPostComments","result","elements","map","name","email","body","className","instance","axios","baseURL","params","_limit","getPosts","_page","get","data","getSinglePost","searchPosts","q"],"sourceRoot":""}